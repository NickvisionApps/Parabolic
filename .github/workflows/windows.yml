on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [ "review_requested", "ready_for_review" ]
  workflow_dispatch:
name: Windows
permissions:
  id-token: write
  contents: read
env:
  GITHUB_ACTIONS: true
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
jobs:
  winui-windows:
    name: "WinUI on Windows"
    if: ${{ github.event.pull_request.user.login != 'weblate' }}
    strategy:
      matrix:
        variant:
          - arch: x64
            runner: windows-2025
            triplet: x64-windows
            ffmpeg: win64
          #- arch: arm64
          #  runner: windows-11-arm
          #  triplet: arm64-windows
          #  ffmpeg: winarm64
    runs-on: ${{ matrix.variant.runner }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: "Setup Environment"
        shell: pwsh
        run: |
          $ProgressPreference = 'SilentlyContinue'
          mkdir build
          mkdir build-portable
          Invoke-WebRequest https://github.com/mlocati/gettext-iconv-windows/releases/download/v0.26-v1.17/gettext0.26-iconv1.17-shared-64.zip -OutFile gettext.zip
          Invoke-WebRequest https://files.jrsoftware.org/is/6/innosetup-6.5.1.exe -OutFile innosetup.exe
          Expand-Archive -Force 'gettext.zip'
          move gettext\bin\* C:\Windows\System32
          winget upgrade winget --accept-package-agreements --accept-source-agreements --disable-interactivity
          winget install --id JRSoftware.InnoSetup -e --accept-package-agreements --accept-source-agreements --disable-interactivity
          echo "C:\Program Files (x86)\Inno Setup 6" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "$env:LOCALAPPDATA\Programs\Inno Setup 6" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: "Vcpkg"
        uses: johnwason/vcpkg-action@v7
        id: vcpkg
        with:
          pkgs: boost-date-time libnick
          triplet: ${{ matrix.variant.triplet }}
          revision: 6548e2ee65216d462b945337ba74d09269fb4e8f
          token: ${{ github.token }}
          cache-key: ${{ matrix.variant.triplet }}-6548e2ee65216d462b945337ba74d09269fb4e8f
      - name: "Build (Installer)"
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake -G "Visual Studio 17 2022" ..
          cmake --build . --config Release
      - name: "Build (Portable)"
        working-directory: ${{ github.workspace }}/build-portable
        run: |
          cmake -G "Visual Studio 17 2022" -DBUILD_AS_PORTABLE=ON ..
          cmake --build . --config Release
      - name: "Create Installer"
        working-directory: ${{github.workspace}}/inno
        shell: pwsh
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest https://aka.ms/vs/17/release/vc_redist.${{ matrix.variant.arch }}.exe -OutFile vc_redist.exe
          Invoke-WebRequest https://aka.ms/windowsappsdk/1.8/latest/windowsappruntimeinstall-${{ matrix.variant.arch }}.exe -OutFile windowsappruntimeinstall.exe
          Invoke-WebRequest https://github.com/yt-dlp/yt-dlp/releases/download/2025.09.26/yt-dlp.exe -OutFile yt-dlp.exe
          Invoke-WebRequest https://github.com/aria2/aria2/releases/download/release-1.37.0/aria2-1.37.0-win-64bit-build1.zip -OutFile aria2.zip
          Invoke-WebRequest https://github.com/yt-dlp/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-${{ matrix.variant.ffmpeg }}-gpl.zip -OutFile ffmpeg.zip
          Invoke-WebRequest https://github.com/denoland/deno/releases/download/v2.5.2/deno-x86_64-pc-windows-msvc.zip -OutFile deno.zip
          Expand-Archive -Force 'aria2.zip'
          Expand-Archive -Force 'ffmpeg.zip'
          Expand-Archive -Force 'deno.zip'
          move aria2\aria2-1.37.0-win-64bit-build1\aria2c.exe aria2c.exe
          move ffmpeg\ffmpeg-master-latest-${{ matrix.variant.ffmpeg }}-gpl\bin\ffmpeg.exe ffmpeg.exe
          move ffmpeg\ffmpeg-master-latest-${{ matrix.variant.ffmpeg }}-gpl\bin\ffprobe.exe ffprobe.exe
          move ffmpeg\ffmpeg-master-latest-${{ matrix.variant.ffmpeg }}-gpl\bin\ffplay.exe ffplay.exe
          move deno\deno-x86_64-pc-windows-msvc\deno.exe deno.exe
          iscc setup.iss
      - name: "Create Portable"
        working-directory: ${{ github.workspace }}/build-portable/org.nickvision.tubeconverter.winui/Release
        shell: pwsh
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest https://aka.ms/vs/17/release/vc_redist.${{ matrix.variant.arch }}.exe -OutFile vc_redist.exe
          Invoke-WebRequest https://aka.ms/windowsappsdk/1.8/latest/windowsappruntimeinstall-${{ matrix.variant.arch }}.exe -OutFile windowsappruntimeinstall.exe
          Invoke-WebRequest https://github.com/yt-dlp/yt-dlp/releases/download/2025.09.26/yt-dlp.exe -OutFile yt-dlp.exe
          Invoke-WebRequest https://github.com/aria2/aria2/releases/download/release-1.37.0/aria2-1.37.0-win-64bit-build1.zip -OutFile aria2.zip
          Invoke-WebRequest https://github.com/yt-dlp/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-${{ matrix.variant.ffmpeg }}-gpl.zip -OutFile ffmpeg.zip
          Invoke-WebRequest https://github.com/denoland/deno/releases/download/v2.5.2/deno-x86_64-pc-windows-msvc.zip -OutFile deno.zip
          Expand-Archive -Force 'aria2.zip'
          Expand-Archive -Force 'ffmpeg.zip'
          Expand-Archive -Force 'deno.zip'
          move aria2\aria2-1.37.0-win-64bit-build1\aria2c.exe aria2c.exe
          move ffmpeg\ffmpeg-master-latest-${{ matrix.variant.ffmpeg }}-gpl\bin\ffmpeg.exe ffmpeg.exe
          move ffmpeg\ffmpeg-master-latest-${{ matrix.variant.ffmpeg }}-gpl\bin\ffprobe.exe ffprobe.exe
          move ffmpeg\ffmpeg-master-latest-${{ matrix.variant.ffmpeg }}-gpl\bin\ffplay.exe ffplay.exe
          move deno\deno-x86_64-pc-windows-msvc\deno.exe deno.exe
          Remove-Item -Path aria2.zip -Force
          Remove-Item -Path aria2 -Recurse -Force
          Remove-Item -Path ffmpeg.zip -Force
          Remove-Item -Path ffmpeg -Recurse -Force
          Remove-Item -Path deno.zip -Recurse -Force
          Remove-Item -Path deno -Recurse -Force
      - name: "Upload (Installer)"
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/inno/NickvisionParabolicSetup.exe
          name: Windows-${{ matrix.variant.arch }}-Installer
      - name: "Upload (Portable)"
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/build-portable/org.nickvision.tubeconverter.winui/Release
          name: Windows-${{ matrix.variant.arch }}-Portable
